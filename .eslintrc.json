{
  "parser": "@typescript-eslint/parser",
  "extends": ["prettier"],
  "plugins": ["@typescript-eslint", "import", "prettier"],
  "rules": {
    "prettier/prettier": "error",
    "no-cond-assign": "off",
    "no-irregular-whitespace": "error",
    "no-unexpected-multiline": "error",
    "guard-for-in": "error",
    "no-caller": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-multi-str": "error",
    "no-new-wrappers": "error",
    "no-throw-literal": "error",
    "no-with": "error",
    "prefer-promise-reject-errors": "error",
    "new-cap": "error",
    "one-var": [
      "error",
      {
        "var": "never",
        "let": "never",
        "const": "never"
      }
    ],
    "no-new-symbol": "error",
    "no-this-before-super": "error",
    "no-var": "error",
    "prefer-const": ["error", { "destructuring": "all" }],
    "require-jsdoc": "off",
    "curly": [2, "all"],
    "no-octal": "error",
    "no-eval": "error",
    "no-invalid-this": "off",
    "prefer-rest-params": "off",
    "prefer-spread": "off",
    "no-multi-spaces": ["error", { "ignoreEOLComments": true }],
    "no-multiple-empty-lines": ["error", { "max": 1 }],
    "no-global-assign": "error",
    "import/no-duplicates": "error",
    "eqeqeq": ["error", "always", { "null": "ignore" }],
    "no-shadow": "error",
    "no-unreachable": "error",
    "no-unsafe-negation": "error",
    "no-empty": ["error", { "allowEmptyCatch": true }],
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": ["error", { "default": "array-simple" }],
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/no-restricted-types": "error",
    "@typescript-eslint/no-empty-object-type": "error",
    "@typescript-eslint/no-wrapper-object-types": "error",
    "@typescript-eslint/no-unsafe-function-type": "error",
    "@typescript-eslint/consistent-type-assertions": [
      "error",
      { "assertionStyle": "as", "objectLiteralTypeAssertions": "never" }
    ],
    "@typescript-eslint/explicit-member-accessibility": "error",
    "no-array-constructor": "off",
    "@typescript-eslint/no-array-constructor": "error",
    "no-empty-function": "off",
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/no-empty-interface": "error",
    "no-extra-parens": "off",
    "@typescript-eslint/no-extraneous-class": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-inferrable-types": "error",
    "no-magic-numbers": "off",
    "@typescript-eslint/no-magic-numbers": [
      "error",
      { "ignoreNumericLiteralTypes": true, "ignoreEnums": true }
    ],
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/no-unnecessary-qualifier": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "ignoreRestSiblings": true,
        "caughtErrors": "none"
      }
    ],
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["error", { "functions": false }],
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/prefer-readonly": "error",
    "@typescript-eslint/prefer-string-starts-ends-with": "error",
    "@typescript-eslint/require-array-sort-compare": "error",
    "@typescript-eslint/restrict-plus-operands": "error",
    "@typescript-eslint/unbound-method": "error",
    "@typescript-eslint/unified-signatures": "error",
    "@typescript-eslint/prefer-reduce-type-parameter": "error",
    "@typescript-eslint/prefer-ts-expect-error": "error",
    "valid-jsdoc": "off",
    "no-undef": "off",
    "camelcase": "off",
    "@typescript-eslint/ban-ts-comment": [
      "error",
      {
        "ts-ignore": true,
        "ts-nocheck": false,
        "ts-expect-error": { "descriptionFormat": "^ TS\\d+: .+$" }
      }
    ]
  }
}
